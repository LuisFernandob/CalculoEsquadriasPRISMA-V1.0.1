/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import dao.ItemOrcamento;
import dao.ItemOrcamentoDAO;
import dao.Orcamento;
import dao.OrcamentoDAO;
import dao.VariaveisDAO;
import guiAntesInclusoes.JTableAntesIncluirItemOrcamento;
import guiIncluirAlterar.JTableIncluirAlterarItemOrcamento;
import sistema.MySQLDumper;

/**
 *
 * @author luisf
 */

@SuppressWarnings("serial")
public class TelaItensOrcamento extends javax.swing.JFrame implements KeyListener {
	
	int salvarIdOrcamento = -1 ;
	Orcamento orcamentoAberto =  new Orcamento(false);


    /**
     * Creates new form TelaOrcamentosNew
     */
    public TelaItensOrcamento() {
    	
    	addKeyListener(this);
 	    setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
    }
    
    public TelaItensOrcamento(Orcamento orcamento) {
    	
    	addKeyListener(this);
 	    setFocusable(true);
        setFocusTraversalKeysEnabled(false);
    	if(salvarIdOrcamento==-1) {
        	salvarIdOrcamento = orcamento.getIdOrcamento();
        	}
    	
    		orcamentoAberto = orcamento;

        	initComponents(orcamento);

        	 DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
             jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
             
            readJTable(orcamento);
    }
    
  public void readJTable(Orcamento orcamento) {
        
		DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
	    jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
        modelo.setNumRows(0);
        ItemOrcamentoDAO odao = new ItemOrcamentoDAO();
                
        	for (ItemOrcamento o : odao.lerParaProduto(orcamento.getIdOrcamento())) {
                    modelo.addRow(new Object[]{  
                        o.getIdItensOrcamento(),
                        o.getIdOrcamento(),		
                        o.getIdProduto(),
                        o.getArremate(),
                        o.getArremateInferior(),
                        o.getContramarco(),
                        o.getContramarcoInferior(),
                        o.getLarguraMm(),
                        o.getAlturaMm(),
                        o.getQuantidade(), 
                        o.getPesoTotal(),
                        o.getValorTotal()
                    });
        	}
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

   	    setTitle("Sistema para cálculo de esquadrias -> Orçamentos -> Itens orçamento");

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Navegação"));

        jButton7.setText("Voltar (orçamentos)");
        jButton7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Edição"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {},
                new String [] {
                    "iditens_orcamento","idorcamento","idproduto", "arremate","arremateinferior", "contramarco", "contramarcoinferior", "largura_mm","altura_mm","quantidade", "pesototal","valortotal"}
            ) { boolean[] podeEditar = new boolean [] {false,false, false, false,false,false, false, false, false,false,false,false};
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return podeEditar [columnIndex];
                }
            });
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt2) {
                	jTable1MouseClicked(evt2);
                }
            });
        
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        
        jScrollPane1.setViewportView(jTable1);

        scrollPane1.add(jScrollPane1);

        jButton1.setText("INCLUIR PRODUTO");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setToolTipText("Inclui a cotaçao do produto selecionado neste orçamento");

        jButton2.setText("EXCLUIR PRODUTO");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setToolTipText("Exclui a cotaçao do produto selecionado deste orçamento");

        jButton3.setText("ALTERAR PRODUTO");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setToolTipText("Altera a cotação do produto selecionado neste orçamento");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 204, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Editando orçamento nº "+salvarIdOrcamento+" - "+orcamentoAberto.getDescricao());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

       
        
        jMenu3.setText("Backup");

        jMenuItem1.setText("Exportar BD");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Importar BD");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Valores Globais");

        jMenuItem3.setText("Valor do quilo do alumínio");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem5.setText("Valor do quilo do contramarco");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);
        
        jMenuItem4.setText("Mão de obra (%)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                ))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    )
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)   
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    	this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }// </editor-fold>         
    
    private void initComponents(Orcamento orcamento) {

    	
    	
   	    setTitle("Sistema para cálculo de esquadrias -> Orçamentos -> Itens orçamento");

        jPanel1 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Navegação"));

        jButton7.setText("Voltar (orçamentos)");
        jButton7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Edição"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {},
                new String [] {
                    "iditens_orcamento","idorcamento","idproduto", "arremate", "arremateinferior", "contramarco", "contramarcoinferior","largura_mm","altura_mm","quantidade", "pesototal","valortotal"}
            ) { boolean[] podeEditar = new boolean [] {false, false, false, false, false, false, false, false, false, false, false, false};
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return podeEditar [columnIndex];
                }
            });
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt2) {
                	jTable1MouseClicked(evt2);
                }
            });
        
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        
        jScrollPane1.setViewportView(jTable1);

        scrollPane1.add(jScrollPane1);

        jButton1.setText("INCLUIR PRODUTO");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("EXCLUIR PRODUTO");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("ALTERAR PRODUTO");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 204, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        
        OrcamentoDAO oDAO = new OrcamentoDAO();
        
        Orcamento o = oDAO.lerObjOrcamento(salvarIdOrcamento);
        
        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Editando orçamento nº "+salvarIdOrcamento+" - "+o.getDescricao());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);


        jMenu3.setText("Backup");

        jMenuItem1.setText("Exportar BD");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Importar BD");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Valores Globais");

        jMenuItem3.setText("Valor do quilo do alumínio");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem5.setText("Valor do quilo do contramarco");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);
        
        jMenuItem4.setText("Mão de obra (%)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                ))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    )
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    	this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }// </editor-fold>      

   int selecao = -1;
   int linhaSelecionada = -1;
	
   private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
    	
    	if (selecao != -1) {
    		if (selecao == 0 && linhaSelecionada == jTable1.getSelectedRow()) {
    			selecao = jTable1.getSelectedRow();
    	  
    	
    			if (jTable1.getSelectedRow() != -1) {
    				 
    					ItemOrcamentoDAO odao = new ItemOrcamentoDAO();
    		            ItemOrcamento o = odao.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
    		            this.dispose();
    		            new JTableIncluirAlterarItemOrcamento(o).setVisible(true);
                             
    			} else {JOptionPane.showMessageDialog(null, "Selecione um item do orçamento para alterar!");}
    		selecao = -1;
    		linhaSelecionada = -1;
    		} else { selecao = -1; linhaSelecionada = -1;}
    	} else {selecao = 0; linhaSelecionada = jTable1.getSelectedRow();}
    }                                    

   private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {
  	 
   	int key = evt.getKeyCode();
   	
   	if(key == KeyEvent.VK_ENTER)
        {
            
   		if (jTable1.getSelectedRow() != -1) {
  			 
				ItemOrcamentoDAO odao = new ItemOrcamentoDAO();
	            ItemOrcamento o = odao.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
	            this.dispose();
	            new JTableIncluirAlterarItemOrcamento(o).setVisible(true);
                    
		} else {JOptionPane.showMessageDialog(null, "Selecione um item do orçamento para alterar!");}
   		
        } else if(key == KeyEvent.VK_DELETE)
        {
            
       	 if(jTable1.getSelectedRow() != -1) {
            	
           		if(JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o produto incluso no orçamento?\n"
           				+ "Importante: isto não excluirá o produto do banco de dados, apenas o removerá deste orçamento!")==0) {

          		ItemOrcamentoDAO ioDAO = new ItemOrcamentoDAO();
            	ItemOrcamento io = ioDAO.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
            	
            	ioDAO.delete(io);
            	
            	
            	readJTable(orcamentoAberto);
           		}
            	} else {JOptionPane.showMessageDialog(null, "Selecione uma pruto do orçamento para excluir!");}
   		 
        }
   	 
   	 
   	
   }
   
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        MySQLDumper.export();
    }                                          

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
    	this.dispose();
        new TelaOrcamentos().setVisible(true);
        
    }                                        

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      
    	JOptionPane.showMessageDialog(null, "Função ainda não implementada, caso precise recuperar o backup fale com o desenvolvedor do sistema!");

    }                                          

   private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        
        VariaveisDAO vdao = new VariaveisDAO();
        if(!vdao.procurarReferencia()){
            vdao.criarReferencia();
        }
        double valorAluminio = vdao.lerVariavel("precoaluminio");
        
        String novoValor =  JOptionPane.showInputDialog("O preço atual do aluminio é: R$"+valorAluminio+"\n"
                + "Digite um novo valor para atualizar ou cancele para manter o valor atual");
        if(!novoValor.isEmpty()){
            double novoValor2 = Double.parseDouble(novoValor);
            vdao.update("precoaluminio", novoValor2);
        }
        vdao.atualizarVariavelLocal();

    }                                          

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        
        VariaveisDAO vdao = new VariaveisDAO();
        if(!vdao.procurarReferencia()){
            vdao.criarReferencia();
        }
        double porcentagemMDO = vdao.lerVariavel("porcentagemmdo");
        
        String novoValor =  JOptionPane.showInputDialog("A porcentagem atual da mao de obra é: "+porcentagemMDO+"%\n"
                + "Digite um novo valor para atualizar ou cancele para manter o valor atual");
        if(!novoValor.isEmpty()){
            double novoValor2 = Integer.parseInt(novoValor);
            vdao.update("porcentagemmdo", novoValor2);
        }
        vdao.atualizarVariavelLocal();

    }              
    
   private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        
        VariaveisDAO vdao = new VariaveisDAO();
        if(!vdao.procurarReferencia()){
            vdao.criarReferencia();
        }
        double valorContramarco = vdao.lerVariavel("precocontramarco");
        
        String novoValor =  JOptionPane.showInputDialog("O preço atual do contramarco é: R$"+valorContramarco+"\n"
                + "Digite um novo valor para atualizar ou cancele para manter o valor atual");
        if(!novoValor.isEmpty()){
            double novoValor2 = Integer.parseInt(novoValor);
            vdao.update("precocontramarco", novoValor2);
        }
        vdao.atualizarVariavelLocal();

    }   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        this.dispose();
        new JTableAntesIncluirItemOrcamento(orcamentoAberto).setVisible(true);;
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

      	if(jTable1.getSelectedRow() != -1) {
        	
       		if(JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o produto incluso no orçamento?\n"
       				+ "Importante: isto não excluirá o produto do banco de dados, apenas o removerá deste orçamento!")==0) {

      		ItemOrcamentoDAO ioDAO = new ItemOrcamentoDAO();
        	ItemOrcamento io = ioDAO.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
        	
        	ioDAO.delete(io);
        	
        	
        	readJTable(orcamentoAberto);
       		}
        	} else {JOptionPane.showMessageDialog(null, "Selecione uma pruto do orçamento para excluir!");}
        	
        }                                                                                                  

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         

		if (jTable1.getSelectedRow() != -1) {
			 
				ItemOrcamentoDAO odao = new ItemOrcamentoDAO();
	            ItemOrcamento o = odao.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
	            this.dispose();
	            new JTableIncluirAlterarItemOrcamento(o).setVisible(true);
                     
		} else {JOptionPane.showMessageDialog(null, "Selecione um item do orçamento para alterar!");}

    }         
    
    @Override
    public void keyTyped(KeyEvent e) {
    	
    	
    }

    @Override
    public void keyPressed(KeyEvent e) {
    	 
    	int key = e.getKeyCode();
    	
    	if(key == KeyEvent.VK_ENTER)
         {
             
    		if (jTable1.getSelectedRow() != -1) {
   			 
				ItemOrcamentoDAO odao = new ItemOrcamentoDAO();
	            ItemOrcamento o = odao.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
	            this.dispose();
	            new JTableIncluirAlterarItemOrcamento(o).setVisible(true);
                     
		} else {JOptionPane.showMessageDialog(null, "Selecione um item do orçamento para alterar!");}
    		
         } else if(key == KeyEvent.VK_DELETE)
         {
             
        	 if(jTable1.getSelectedRow() != -1) {
             	
            		if(JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o produto incluso no orçamento?\n"
            				+ "Importante: isto não excluirá o produto do banco de dados, apenas o removerá deste orçamento!")==0) {

           		ItemOrcamentoDAO ioDAO = new ItemOrcamentoDAO();
             	ItemOrcamento io = ioDAO.lerObjItemOrcamento(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
             	
             	ioDAO.delete(io);
             	
             	
             	readJTable(orcamentoAberto);
            		}
             	} else {JOptionPane.showMessageDialog(null, "Selecione uma pruto do orçamento para excluir!");}
    		 
         }
    	 
    	 
    	
    }

    @Override
    public void keyReleased(KeyEvent e) {
    	// TODO Auto-generated method stub
    	
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaItensOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaItensOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaItensOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaItensOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaItensOrcamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration                   
}
