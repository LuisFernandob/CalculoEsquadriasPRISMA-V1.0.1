package guiAntesInclusoes;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import dao.Componente;
import dao.ComponenteDAO;
import dao.Produto;
import dao.ProdutoDAO;
import gui.TelaTipologias;
import guiIncluirAlterar.JTableIncluirAlterarTipologia;

/**
*
* @author luisf
*/
@SuppressWarnings("serial")
public class JTableAntesIncluirTipologia extends javax.swing.JFrame implements KeyListener{

	int idProduto;
	
   /**
    * Creates new form JTableAntesIncluirItemOrcamento
    */
   public JTableAntesIncluirTipologia(Produto produto) {
       
	   idProduto = produto.getIdProduto();
	   
	   addKeyListener(this);
	   setFocusable(true);
       setFocusTraversalKeysEnabled(false);
	   initComponents();
	   DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
       jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
       readJTable();
   }
   
public JTableAntesIncluirTipologia() {
       	   
	   addKeyListener(this);
	   setFocusable(true);
       setFocusTraversalKeysEnabled(false);
	   initComponents();
	   DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
       jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
       readJTable();
   }

   public void lerJTableParaDescricao(String descricao) {
	   
	   DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
       jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
       modelo.setNumRows(0);
       ComponenteDAO cdao = new ComponenteDAO();
       for (Componente c : cdao.lerParaNome(descricao)) {
           modelo.addRow(new Object[]{
           c.getCodigo_componente(),
           c.getTipo(),
           c.getDescricao(),
           c.getComprimento_barra_m(),
           c.getUnidade(),
           c.getLargura_mm(),
           c.getLargura_encaixe_mm(),
           c.getPeso_por_metro() 
           });
       }
   
   }
   
   public void readJTable() {
       
	   DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
       jTable1.setRowSorter(new TableRowSorter<DefaultTableModel>(modelo));
       modelo.setNumRows(0);
       ComponenteDAO cdao = new ComponenteDAO();
       	for (Componente c : cdao.lerTabela()) {
       		modelo.addRow(new Object[]{            			
       				c.getCodigo_componente(),
       				c.getTipo(),
       	    		c.getDescricao(),
       	    		c.getComprimento_barra_m(),
       	    		c.getUnidade(),
       	    		c.getLargura_mm(),
       	    		c.getLargura_encaixe_mm(),
       	    		c.getPeso_por_metro()       	     
       		});
       	}
   }
  
   
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
   private void initComponents() {

   	setTitle("Sistema para cálculo de esquadrias -> Produtos -> Tipologia -> Selecionar componente para incluir");

       jLabel1 = new javax.swing.JLabel();
       jPanel2 = new javax.swing.JPanel();
       jTextField1 = new javax.swing.JTextField();
       jLabel2 = new javax.swing.JLabel();
       scrollPane1 = new java.awt.ScrollPane();
       jScrollPane1 = new javax.swing.JScrollPane();
       jTable1 = new javax.swing.JTable();

       setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

       jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
       jLabel1.setText("Clique duas vezes sobre o componente à ser incluído:");

       jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Localizar"));

       jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
           public void keyTyped(java.awt.event.KeyEvent evt) {
               jTextField1KeyTyped(evt);
           }
       });
       jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
           public void keyPressed(java.awt.event.KeyEvent evt) {
               jTextField1KeyPressed(evt);
           }
       });
       
       

       jLabel2.setText("Digite alguma palavra contida na descrição do componente desejado para filtrar a tabela.");

       javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
       jPanel2.setLayout(jPanel2Layout);
       jPanel2Layout.setHorizontalGroup(
           jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel2Layout.createSequentialGroup()
               .addContainerGap()
               .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                   .addGroup(jPanel2Layout.createSequentialGroup()
                       .addComponent(jLabel2)
                       .addGap(0, 9, Short.MAX_VALUE)))
               .addContainerGap())
       );
       jPanel2Layout.setVerticalGroup(
           jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jLabel2)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
               .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
       );

       jTable1.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][] {},
               new String [] {
            		   "codigo_componente", "tipo", "descricao","comprimento_barra_m","unidade", "largura_mm", "largura_encaixe_mm", "peso_por_metro"}
           ) { boolean[] podeEditar = new boolean [] {false, false, false, false, false,false,false,false};
               public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return podeEditar [columnIndex];
               }
           });
       
       jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
           public void mouseClicked(java.awt.event.MouseEvent evt) {
               jTable1MouseClicked(evt);
           }
       });
       jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
           public void keyPressed(java.awt.event.KeyEvent evt) {
               jTable1KeyPressed(evt);
           }
       });
     
       jScrollPane1.setViewportView(jTable1);

       scrollPane1.add(jScrollPane1);

       javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
       getContentPane().setLayout(layout);
       layout.setHorizontalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
               .addContainerGap()
               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                   .addComponent(scrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                   .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                   .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
               .addContainerGap())
       );
       layout.setVerticalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jLabel1)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
               .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGap(35, 35, 35)
               .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
               .addContainerGap())
       );

       pack();
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
   	   this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
   }// </editor-fold>                        

   private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {                                     
       lerJTableParaDescricao(jTextField1.getText());            
   }      
   
   private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {                                     
	   
		int key = evt.getKeyCode();
		
		if(key == KeyEvent.VK_ENTER)
	     {
	         
				if (jTable1.getSelectedRow() != -1) {
					
	   				ProdutoDAO pdao = new ProdutoDAO();
	   				ComponenteDAO cdao = new ComponenteDAO();   				
	   				Produto p = pdao.lerObjProduto(idProduto);
	   				Componente c = cdao.lerObjComponente(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
	   				this.dispose();
	   				new JTableIncluirAlterarTipologia(p,c).setVisible(true);
	                            
	   			} else {JOptionPane.showMessageDialog(null, "Selecione componente para incluir!");}
			 
	     } else if(key == KeyEvent.VK_ESCAPE)
	     {
	         
	    	 
	    	Produto p = new Produto();
	    	
	    	p.setIdProduto(idProduto);
	    	
			this.dispose();
			new TelaTipologias(p).setVisible(true);
			 
	     }
		           
   }      
               

   int selecao = -1;
   int linhaSelecionada = -1;
   
   private void jTable1KeyPressed(java.awt.event.KeyEvent evt) { 
   
		int key = evt.getKeyCode();
		
		if(key == KeyEvent.VK_ENTER)
	     {
	         
				if (jTable1.getSelectedRow() != -1) {
					
	   				ProdutoDAO pdao = new ProdutoDAO();
	   				ComponenteDAO cdao = new ComponenteDAO();   				
	   				Produto p = pdao.lerObjProduto(idProduto);
	   				Componente c = cdao.lerObjComponente(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
	   				this.dispose();
	   				new JTableIncluirAlterarTipologia(p,c).setVisible(true);
	                            
	   			} else {JOptionPane.showMessageDialog(null, "Selecione componente para incluir!");}
			 
	     } else if(key == KeyEvent.VK_ESCAPE)
	     {
	         
	    	 
	    	Produto p = new Produto();
	    	
	    	p.setIdProduto(idProduto);
	    	
			this.dispose();
			new TelaTipologias(p).setVisible(true);
			 
	     }
		 
	   
   }
   
   private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
	 	
   	if (selecao != -1) {
   		if (selecao == 0 && linhaSelecionada == jTable1.getSelectedRow()) {
   			selecao = jTable1.getSelectedRow();
   	  
   	
   			if (jTable1.getSelectedRow() != -1) {
   				ProdutoDAO pdao = new ProdutoDAO();
   				ComponenteDAO cdao = new ComponenteDAO();   				
   				Produto p = pdao.lerObjProduto(idProduto);
   				Componente c = cdao.lerObjComponente(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
   				this.dispose();
   				new JTableIncluirAlterarTipologia(p,c).setVisible(true);
                            
   			} else {JOptionPane.showMessageDialog(null, "Selecione componente para incluir!");}
   		selecao = -1;
   		linhaSelecionada = -1;
   		} else { selecao = -1; linhaSelecionada = -1;}
   	} else {selecao = 0; linhaSelecionada = jTable1.getSelectedRow();}   }                                    

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
       /* Set the Nimbus look and feel */
       //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
       /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
        */
       try {
           for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
               if ("Nimbus".equals(info.getName())) {
                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                   break;
               }
           }
       } catch (ClassNotFoundException ex) {
           java.util.logging.Logger.getLogger(JTableAntesIncluirTipologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       } catch (InstantiationException ex) {
           java.util.logging.Logger.getLogger(JTableAntesIncluirTipologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       } catch (IllegalAccessException ex) {
           java.util.logging.Logger.getLogger(JTableAntesIncluirTipologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       } catch (javax.swing.UnsupportedLookAndFeelException ex) {
           java.util.logging.Logger.getLogger(JTableAntesIncluirTipologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       }
       //</editor-fold>
       //</editor-fold>

       /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
               new JTableAntesIncluirTipologia().setVisible(true);
           }
       });
   }

   // Variables declaration - do not modify                     
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTable jTable1;
   private javax.swing.JTextField jTextField1;
   private java.awt.ScrollPane scrollPane1;
   // End of variables declaration                   

@Override
public void keyTyped(KeyEvent e) {
	
	
}

@Override
public void keyPressed(KeyEvent e) {
	 
	int key = e.getKeyCode();
	
	if(key == KeyEvent.VK_ENTER)
     {
         
			if (jTable1.getSelectedRow() != -1) {
				
   				ProdutoDAO pdao = new ProdutoDAO();
   				ComponenteDAO cdao = new ComponenteDAO();   				
   				Produto p = pdao.lerObjProduto(idProduto);
   				Componente c = cdao.lerObjComponente(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
   				this.dispose();
   				new JTableIncluirAlterarTipologia(p,c).setVisible(true);
                            
   			} else {JOptionPane.showMessageDialog(null, "Selecione componente para incluir!");}
		 
     } else if(key == KeyEvent.VK_ESCAPE)
     {
         
    	 
    	Produto p = new Produto();
    	
    	p.setIdProduto(idProduto);
    	
		this.dispose();
		new TelaTipologias(p).setVisible(true);
		 
     }
	 
	 
	
}

@Override
public void keyReleased(KeyEvent e) {
	// TODO Auto-generated method stub
	
}
}
